---
- set_fact: role_name=common

- name: show environment name
  debug: var=environment_name

- name: set hostname
  hostname: name={{ hostname }}
  when:
    - provider != 'docker'

- name: enable multiverse
  apt_repository: repo="deb http://archive.ubuntu.com/ubuntu trusty multiverse" state=present update_cache=yes

- name: install ansible dependencies
  apt: name={{ item }} state=present update_cache=no
  with_items:
    - python-mysqldb
    - python-pymongo
    - unzip
    - curl
    - htop
    - git
    - toilet
    - rdiff-backup

- name: remove unused dependencies
  apt: name={{ item }} state=absent update_cache=no
  with_items:
    - puppet
    - chef
  register: result

- name: autoremove unused dependencies
  command: apt-get -y autoremove
  when: result|changed

- name: set timezone
  copy: src=timezone dest=/etc/timezone
  register: result

- name: update timezone
  command: dpkg-reconfigure --frontend noninteractive tzdata
  when: result|changed

- name: set motd
  shell: toilet {{ environment_name }} > /etc/motd
  args:
    creates: /etc/motd

- name: switch to root when running "vagrant ssh"
  lineinfile: dest=/home/vagrant/.bashrc line="sudo -i"
  when:
    - is_development_environment
    - ansible_os_family == 'Debian'
    - provider != 'docker'

- name: create directories
  file: path={{ item }} state=directory
  with_items:
    - "{{ project_dir }}"
    - "{{ backup_dir}}"
    - "{{ download_dir }}"
    - "{{ log_dir }}"

- name: install docker boot script
  template: src=run.sh.j2 dest={{ project_dir }}/run.sh mode=0755
  when:
    - provider == 'docker'

- name: install jq
  apt: name=jq=1.3* state=present force=yes
  when: ansible_os_family == 'Debian'
