description "{{ role_name }}"

{% if ethereum_mine_on_boot and capabilities.vote.enabled %}
{% if is_development_environment %}
start on vagrant-mounted
{% else %}
start on startup
{% endif %}
{% endif %}
stop on shutdown

respawn
respawn limit 10 5

pre-start script
    service {{ project_name }}-blockchain stop || true
end script

script
{% if is_development_environment and ethereum_testrpc %}
    PRIVATE_KEY=0x$(cat $(find /opt/cocorico/blockchain/data/keystore/ -type f) | jq ".crypto.mac" -r)
    BALANCE=$(cat /opt/cocorico/blockchain/genesis_block.json | jq -r '.alloc[.alloc | keys[0]].balance')

    exec testrpc \
        --account="${PRIVATE_KEY},${BALANCE}" \
        --unlock 0 \
        --port {{ ethereum_rpc_private_port }} \
        --blocktime 1 \
        --gasLimit {{ ethereum_genesis_gas_limit }} \
        >>{{ log_dir }}/blockchain.log 2>&1
{% else %}
    exec geth \
        --maxpeers 0 \
        --nodiscover \
        --rpc \
        --rpccorsdomain "http://{{ ethereum_rpc_private_host }}:{{ ethereum_rpc_private_port }}" \
        --mine \
        --minerthreads 1 \
        --etherbase {{ ethereum_etherbase_address }} \
        --networkid "{{ ethereum_network_id }}" \
        --unlock 0 \
        --password {{ project_dir }}/{{ role_name }}/password \
        --datadir {{ ethereum_datadir }} \
        >>{{ log_dir }}/blockchain.log 2>&1
{% endif %}
end script
